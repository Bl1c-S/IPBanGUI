//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Logic_IPBanUtility.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class KeyDescription {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal KeyDescription() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Logic_IPBanUtility.Properties.KeyDescription", typeof(KeyDescription).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Тривалість заборони ip-адреси (DD:HH:MM:SS) - 00:00:00:00 до 9999 днів (максимальна тривалість). Цей параметр може містити кілька проміжків часу, розділених комами. Для декількох часових проміжків: Коли попередній час заборони закінчується, наступний невдалий вхід, який спричиняє блокування ip-адреси, призведе до переходу на наступний час заборони. Після того, як минув останній час блокування, ip-адреса буде видалена з бази даних і почнеться відлік з першого часу блокування. Кілька часових проміжків повинні [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BanTime {
            get {
                return ResourceManager.GetString("BanTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Список ip-адрес, cidr-масок, url-адрес, dns-імен або імен користувачів через кому, для блокування назавжди. 
        ///Для url-адрес заборонено використовувати символ ?, тому якщо вам потрібен рядок запиту, ви повинні створити url-адресу без символів ? і перенаправити її за 302-м редіректом на нову url-адресу з символом ? у ній..
        /// </summary>
        internal static string Blacklist {
            get {
                return ResourceManager.GetString("Blacklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Регулярний вираз для більш розширеного чорного списку. Скорочення: використовуйте *, щоб дозволити будь-яку частину IP-адреси, доменного імені або імені користувача (наприклад, 128.128.128.*).       Приклад регексу, який вносить до чорного списку декілька ip-адрес: ^(128\.128\.128\.*)|(99\.99\.99\.[0-9])$ Детальніше про regex: http://www.regular-expressions.info/.
        /// </summary>
        internal static string BlacklistRegex {
            get {
                return ResourceManager.GetString("BlacklistRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Для очищення та розблокування всіх ip-адрес з брандмауера при перезапуску, встановлюэмо значення ключа &quot;true&quot; для вимкнення &quot;false&quot;..
        /// </summary>
        internal static string ClearBannedIPAddressesOnRestart {
            get {
                return ResourceManager.GetString("ClearBannedIPAddressesOnRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Чи очищати &quot;true&quot; всі невдалі входи для IP, після успішного входу, ні якщо встановлено значення &quot;false&quot;..
        /// </summary>
        internal static string ClearFailedLoginsOnSuccessfulLogin {
            get {
                return ResourceManager.GetString("ClearFailedLoginsOnSuccessfulLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Як часто сервіс повинен виконувати профілактичні роботи, такі як блокування ip-адрес, розблокування ip-адрес, перезавантаження конфігурації і т.д. (DD:HH:MM:SS).
        /// </summary>
        internal static string CycleTime {
            get {
                return ResourceManager.GetString("CycleTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Тривалість часу після останньої невдалої спроби входу, через яку IP буде забуто (лічильник скидається до 0). Встановіть 00:00:00:00 для використання максимальної тривалості. (DD:HH:MM:SS).
        /// </summary>
        internal static string ExpireTime {
            get {
                return ResourceManager.GetString("ExpireTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Кількість невдалих спроб входу до блокування ip-адреси.
        /// </summary>
        internal static string FailedLoginAttemptsBeforeBan {
            get {
                return ResourceManager.GetString("FailedLoginAttemptsBeforeBan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Кількість невдалих спроб входу до блокування ip-адреси, якщо ім&apos;я користувача знаходиться у білому списку.
        /// </summary>
        internal static string FailedLoginAttemptsBeforeBanUserNameWhitelist {
            get {
                return ResourceManager.GetString("FailedLoginAttemptsBeforeBanUserNameWhitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ім&apos;я префікса правила для правил брандмауера, повинно містити лише A-Z, 0-9 та _.
        /// </summary>
        internal static string FirewallRulePrefix {
            get {
                return ResourceManager.GetString("FirewallRulePrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Створення правил брандмауера для дозволу або блокування ip-адрес, по одному на рядок. Чудовий спосіб зберегти правила брандмауера.     Формат: назва правила;дозволити або заблокувати;список ip-адрес (через кому);список дозволених портів (через кому); regex платформи 
        ///Ви можете залишити список дозволених портів порожнім, щоб правило застосовувалося до всіх портів, Ім&apos;я не повинно перевищувати 16 символів Див. https://www.mediawiki.org/wiki/Help:Range_blocks і https://www.mediawiki.org/wiki/Help:Range_blocks/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FirewallRules {
            get {
                return ResourceManager.GetString("FirewallRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Мінімальний час між невдалими спробами входу для ip-адреси для збільшення лічильника до блокування..
        /// </summary>
        internal static string MinimumTimeBetweenFailedLoginAttempts {
            get {
                return ResourceManager.GetString("MinimumTimeBetweenFailedLoginAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Мінімальний час між успішними спробами входу для ip-адреси для збільшення лічильника успішних входів..
        /// </summary>
        internal static string MinimumTimeBetweenSuccessfulLoginAttempts {
            get {
                return ResourceManager.GetString("MinimumTimeBetweenSuccessfulLoginAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Чи обробляти внутрішні ip-адреси true або false..
        /// </summary>
        internal static string ProcessInternalIPAddresses {
            get {
                return ResourceManager.GetString("ProcessInternalIPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ігнорується, якщо вказано лише один час бану.     Якщо це значення є істинним, то лічильник невдалих спроб входу буде скинуто до 0, що призведе до того, що наступний невдалий вхід почнеться з 1, а потім ip-адреса перейде до наступного часу бану, як тільки лічильник невдалих спроб входу досягне значення FailedLoginAttemptsBeforeBan.     Якщо це значення дорівнює false, то лічильник невдалих спроб входу не буде скинуто, і наступний невдалий вхід призведе до негайного бану ip-адреси на наступний час бану в спи [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ResetFailedLoginCountForUnbannedIPAddresses {
            get {
                return ResourceManager.GetString("ResetFailedLoginCountForUnbannedIPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Список дозволених імен користувачів, розділених комами. UserNameWhitelistMinimumEditDistance перевіряється для імен користувачів, яких немає у списку, щоб визначити, чи слід заборонити невдале ім&apos;я користувача. Регістр ігнорується. Порожні записи дозволено, якщо ви хочете дозволити порожні імена користувачів. ВАЖЛИВО: Це може бути вектором атаки хакера. Якщо він знає, що ви використовуєте IPBan, і його не заблокують одразу, він може знати, що він наблизився до потрібного імені користувача. Переконайтеся, що [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserNameWhitelist {
            get {
                return ResourceManager.GetString("UserNameWhitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Якщо відстань редагування (відстань Левенштейна) імені користувача, що зазнав невдачі, перевищує цю відстань, ім&apos;я користувача буде негайно заборонено.       Регістр ігнорується. Ігнорується, якщо UserNameWhitelist порожній..
        /// </summary>
        internal static string UserNameWhitelistMinimumEditDistance {
            get {
                return ResourceManager.GetString("UserNameWhitelistMinimumEditDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ВИКОРИСТОВУЙТЕ З ОБЕРЕЖНІСТЮ! ЯКЩО НЕ ПОРОЖНІЙ, ТО БУДЬ-ЯКА НЕВДАЛА СПРОБА ВХОДУ, ЩО НЕ ЗБІГАЄТЬСЯ З ІМ&apos;ЯМ КОРИСТУВАЧА, ПРИЗВЕДЕ ДО АВТОМАТИЧНОГО БЛОКУВАННЯ!
        ///Ім&apos;я користувача в білому списку regex. Будь-яке ім&apos;я користувача, яке не збігається з ним, призведе до негайного блокування, включаючи порожні імена користувачів..
        /// </summary>
        internal static string UserNameWhitelistRegex {
            get {
                return ResourceManager.GetString("UserNameWhitelistRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Список ip-адрес, cidr-масок, urls або dns-імен, які ніколи не будуть заблоковані, через кому. Білий список має пріоритет над чорним. Якщо ви використовуєте url, відповідь повинна бути текстом, розділеним переходом на новий рядок, наприклад: https://ts.com/IPv4andIPv6.txt. 
        ///Для url не допускається використання символів &quot;?&quot;, тому якщо вам потрібен рядок запиту, ви повинні створити url без символів ? і перенаправити його за допомогою 302 на новий url з символом ? в ньому. ІР-адреси з цього списку додаються до  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Whitelist {
            get {
                return ResourceManager.GetString("Whitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Регулярний вираз для більш розширеного білого списку. Скорочення: використовуйте *, щоб дозволити будь-яку частину IP-адреси (наприклад, 128.128.128.*). Приклад регулярного виразу, який додає до білого списку кілька IP-адрес: ^(128\.128\.128\.*)|(99\.99\.99\.[0-9])$ Більше інформації про реґекс: http://www.regular-expressions.info/ Цей regex не додається до брандмауера, перед тим, як заборонити ip, він спочатку перевіряється, і якщо він співпадає, то заборона не відбувається..
        /// </summary>
        internal static string WhitelistRegex {
            get {
                return ResourceManager.GetString("WhitelistRegex", resourceCulture);
            }
        }
    }
}
