<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EventParagraph1" xml:space="preserve">
    <value>Це вікно призначене для перегляду подій за сьогодні, або інший день, який ви можете обрати у випадаючому списку. Ви можете побачити, хто і коли намагався увійти до вашого сервера. У додатковому вікні "Фільтри" ви зможете відфільтрувати список подій за їх типом та переглянути статистику за обраний день.</value>
  </data>
  <data name="EventParagraph2" xml:space="preserve">
    <value>Таким чином ви самі зможете відібрати ІР адреси які потрібно заблокувати, або просто бути в курсі, хто та коли входив до вашого сервера.</value>
  </data>
  <data name="KeyParagraph1" xml:space="preserve">
    <value>Налаштувати роботу IPBan за допомогою ключів можна у відповідному вікні "Ключі". За замовчуванням відображається тільки декілька ключів, яких достатньо для захисту від підбору пароля. Якщо вас цікавить більше ключів, ви можете увімкнути їх у налаштуваннях програми.</value>
  </data>
  <data name="KeyParagraph2" xml:space="preserve">
    <value>У кожного ключа є чотири додаткові кнопки.
- Натиснувши на кнопку питання, з'явиться опис ключа та інструкція з його використання. 
- Кнопка дискети збереже значення, записане у полі значення ключа. 
- Кнопка "Повернути", повертає останнє збережене значення ключа.
- Натиснувши "Приховати", ключ залишиться активним і буде виконувати збережене в ньому значення, але не буде відображений у вікні "Ключі". Щоб знову відобразити його, перейдіть до налаштувань.</value>
  </data>
  <data name="UpdateParagraph1" xml:space="preserve">
    <value>Для завантаження оновлення, перейдіть на сторінку з версіями, знайдіть версію з зеленою міткою "Latest". Таким чином помічається остання актуальна версія застосунку. Розгорнувши Assets, завантажте IPBanGUI.zip</value>
  </data>
  <data name="UpdateParagraph2" xml:space="preserve">
    <value>Після завантаження архіву, перемістіть вміст завантаженої теки IPBanGUI в теку з вашим IPBanGUI. Зазвичай програма розміщена за шляхом: "C:\Program Files\IPBan\IPBanGUI". Замініть файли у місці призначення, після чого оновлення буде завершено.</value>
  </data>
  <data name="WelcomeParagraph" xml:space="preserve">
    <value>Ласкаво просимо до IPBanGUI – програми, створеної для контролю доступу до вашого сервера. При використанні віддаленого робочого столу, будь-хто може намагатися підключитися до вашого сервера.
Навіть якщо ви використовуєте складні паролі, при невдалій спробі входу система все одно може сильно навантажуватись, особливо якщо цих спроб дуже багато.
Це може призвести до проблем у роботі. IPBanGUI допомагає контролювати процес входу на сервер та забезпечує його безпеку.</value>
  </data>
</root>